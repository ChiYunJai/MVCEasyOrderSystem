@model MvcEasyOrderSystem.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Order</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserId, "Customer")
        </div>
        <div class="editor-field">
            @Html.DropDownList("UserId", String.Empty)
            @Html.ValidationMessageFor(model => model.UserId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OrderDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OrderDateTime)
            @Html.ValidationMessageFor(model => model.OrderDateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RequireDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RequireDateTime)
            @Html.ValidationMessageFor(model => model.RequireDateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReadyDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReadyDateTime)
            @Html.ValidationMessageFor(model => model.ReadyDateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TotalPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TotalPrice)
            @Html.ValidationMessageFor(model => model.TotalPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CancelDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CancelDateTime)
            @Html.ValidationMessageFor(model => model.CancelDateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Reason)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Reason)
            @Html.ValidationMessageFor(model => model.Reason)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsCanceled)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsCanceled)
            @Html.ValidationMessageFor(model => model.IsCanceled)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PaymentMethodId, "PaymentMethod")
        </div>
        <div class="editor-field">
            @Html.DropDownList("PaymentMethodId", String.Empty)
            @Html.ValidationMessageFor(model => model.PaymentMethodId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CollectionMethodId, "CollectionMethod")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CollectionMethodId", String.Empty)
            @Html.ValidationMessageFor(model => model.CollectionMethodId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StatusId, "Status")
        </div>
        <div class="editor-field">
            @Html.DropDownList("StatusId", String.Empty)
            @Html.ValidationMessageFor(model => model.StatusId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DeliveryStartTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeliveryStartTime)
            @Html.ValidationMessageFor(model => model.DeliveryStartTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DeliveryEndTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeliveryEndTime)
            @Html.ValidationMessageFor(model => model.DeliveryEndTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address_AddCity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address_AddCity)
            @Html.ValidationMessageFor(model => model.Address_AddCity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address_AddDistrict)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address_AddDistrict)
            @Html.ValidationMessageFor(model => model.Address_AddDistrict)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address_AddFull)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address_AddFull)
            @Html.ValidationMessageFor(model => model.Address_AddFull)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address_PostCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address_PostCode)
            @Html.ValidationMessageFor(model => model.Address_PostCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CollectDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CollectDateTime)
            @Html.ValidationMessageFor(model => model.CollectDateTime)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
